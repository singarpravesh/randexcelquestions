ggplot()+
geom_point(aes(x = area,
y = poptotal,
col = state,
size = popdensity),
alpha = 0.5)
# Chunk 3
ggplot(iris)+
geom_point(aes(x = Sepal.Length,
y = Sepal.Width,
shape = Species,
col = Species))
# Chunk 4
ggplot(iris)+
geom_point(aes(x = Sepal.Length,
y = Sepal.Width,
shape = Species
),
col = "red")+
facet_wrap(Species ~ .)
# Chunk 5
na.omit(mpg) %>%
ggplot(aes(manufacturer, displ))+
geom_bar(aes(fill = class),
stat = "identity")+
coord_flip()
# Chunk 6
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
# Chunk 7
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
# Chunk 8
library(gapminder); library(tidyverse)
gapminder %>%
filter(continent == "Asia") %>%
ggplot()+
geom_bar(aes(reorder(country, (pop/100000)), (pop/100000)), stat = "identity")+
coord_flip()+
labs(x = "Asian countries",
y = "Population per 100000")
# Chunk 9
library(ggrepel)
starwars %>%
ggplot(aes(height, mass))+
geom_point()+
geom_label_repel(aes(label = if_else(mass > 500& height >150, as.character(species), "")),
nudge_x = 10)+
geom_point(aes(x = filter(starwars, height > 150 & mass > 500)$height,
y = filter(starwars, height > 150 & mass > 500)$mass
),
col = "red"
)+
geom_label_repel(aes(label = if_else(mass < 100& height < 70, as.character(species), "")),
nudge_y = 140, nudge_x = 20)+
geom_point(aes(x = filter(starwars,mass < 100& height < 70)$height,
y = filter(starwars, mass < 100& height < 70)$mass
),
col = "blue"
)
# Chunk 19
construction %>%
pivot_longer(cols = Northeast:West,
names_to = "Region",
values_to = "Completed_Units_Region") %>%
pivot_longer(cols = `1 unit`: `5 units or more`,
names_to = "Size",
values_to = "Completed_Units_Size")
# Chunk 20
fish_encounters %>%
pivot_wider(names_from = station,
values_from = seen) %>%
na.omit()
# Chunk 21
who %>%
pivot_longer(cols = new_sp_m014:newrel_f65,
names_to = "Diagnosis",
values_to = "Value") %>%
filter(country == "India" & year == 2002) %>%
arrange(desc(Value))
# Chunk 22
world_bank_pop %>%
pivot_longer(cols = `2000`: `2017`,
names_to = "Year",
values_to = "Population") %>%
filter(country == "IND" & Year == 2000) %>%
arrange(Population)
# Chunk 23
population %>%
pivot_wider(names_from = year,
values_from = population) %>%
filter(country %in% c("India", "China")) %>%
arrange(desc(country))
# Chunk 24
us_rent_income %>%
pivot_wider(names_from = variable,
values_from = estimate) %>%
filter(moe <= 3) %>%
arrange(rent)
# Chunk 25
relig_income %>%
pivot_longer(cols = 2:11,
names_to = "Income",
values_to = "Count") %>%
filter(Income == "<$10k") %>%
arrange(Count)
# Chunk 26
billboard %>%
separate(col = date.entered,
into = c("year", "month", "day"),
convert = TRUE) %>%
filter(month == 1, year == 2000, day == 1)
# Chunk 27
library(nycflights13)
airlines %>%
separate(col = name,
into = c("airline", "name1", "name2" ), sep = " ") %>%
select(carrier, airline)
# Chunk 35
library(tidyverse)
tibble(`@gmail.com` = c("presi", "econ"),
`:)` = c(0,1))
library(tidyverse)
ggplot(mpg)+
geom_histogram(aes(hwy, fill = drv),
alpha = 0.5)+
facet_grid(drv ~ .)
ggplot(iris)+
geom_point(aes(x = Sepal.Length,
y = Sepal.Width,
shape = Species,
col = Species))
iris
class(iris)
as_tibble(iris)
table(iris$Sepal.Length)
billboard
relig_income
relig_income %>%
pivot_longer(cols = 2:11,
names_to = "Income",
values_to = "Count") %>%
filter(Income == "<$10k") %>%
arrange(Count)
us_rent_income
relig_income
us_rent_income
us_rent_income %>%
pivot_wider(names_from = variable,
values_from = estimate) %>%
filter(moe <= 3) %>%
arrange(rent)
library(tidyverse)
na.omit(mpg) %>%
ggplot(aes(manufacturer, displ))+
geom_bar(aes(fill = class),
stat = "identity")+
coord_flip()
library(tidyverse)
na.omit(mpg) %>%
ggplot(aes(manufacturer, displ))+
geom_bar(aes(fill = class),
stat = "identity")+
coord_flip()
options(scipen = 999)
data(midwest)
midwest %>%
filter(poptotal >= 0 & poptotal <= 500000) %>%
ggplot()+
geom_point(aes(x = area,
y = poptotal,
col = state,
size = popdensity),
alpha = 0.5)
options(scipen = 999)
library(tidtverse)
options(scipen = 999)
library(tidyverse)
data(midwest)
midwest %>%
filter(poptotal >= 0 & poptotal <= 500000) %>%
ggplot()+
geom_point(aes(x = area,
y = poptotal,
col = state,
size = popdensity),
alpha = 0.5)
fish_encounters %>%
pivot_wider(names_from = station,
values_from = seen) %>%
na.omit()
iris %>%
group_by(Species) %>%
summarise(max(Petal.Length), max(Petal.Width))
iris
iris %>%
filter(Sepal.Length > mean(Sepal.Length))
iris %>%
filter(Sepal.Length > mean(Sepal.Length)) %>%
group_by(Species) %>%
summarise(n())
iris %>%
filter(Sepal.Length > mean(Sepal.Length)) %>%
group_by(Species) %>%
summarise(`Sepal.Length > mean(Sepal.Length)` = n())
iris
iris %>%
filter(Sepal.Length > mean(Sepal.Length)) %>%
group_by(Species) %>%
summarise(`Sepal.Length > mean(Sepal.Length)` = n())
iris
iris %>%
group_by(Species) %>%
summarise(sd = sd(Sepal.Width))
iris %>%
group_by(Species) %>%
summarise(sd = sd(Petal.Width))
install.packages('tinytex')
library(tinytex)
install.packages('tinytex')
install.packages("tinytex")
detach("package:tinytex", unload = TRUE)
install.packages("tinytex")
library(tinytex)
library(readxl)
library(tidyverse)
HDI <- read_excel("HDI.xlsx")
hdi <- as_tibble(HDI)
# dimension indices and hdi calculation
hdi %>%
rename(le2021 = `Life expectancy at birth (years) 2021`,
eys2021 = `Expected years of schooling (years) 2021`,
mys2021 = `Mean years of schooling (years) 2021`,
gni2021 = `Gross national income (GNI) per capita (2017 PPP$)`,
rank2020 = `HDI rank 2020`,
country = Country) %>%
mutate(country, ihealth = (le2021 - 20)/(85-20),
ieducation = ((eys2021 - 0)/(18) + (mys2021 - 0)/(15))/2,
iincome = (log(gni2021) - log(100))/(log(75000) - log(100)),
hdi = (ihealth * ieducation * iincome)^(1/3))
library(readxl)
library(tidyverse)
HDI <- read_excel("HDI.xlsx")
hdi <- as_tibble(HDI)
# dimension indices and hdi calculation
hdi %>%
rename(le2021 = `Life expectancy at birth (years) 2021`,
eys2021 = `Expected years of schooling (years) 2021`,
mys2021 = `Mean years of schooling (years) 2021`,
gni2021 = `Gross national income (GNI) per capita (2017 PPP$)`,
rank2020 = `HDI rank 2020`,
country = Country) %>%
mutate(country, ihealth = (le2021 - 20)/(85-20),
ieducation = ((eys2021 - 0)/(18) + (mys2021 - 0)/(15))/2,
iincome = (log(gni2021) - log(100))/(log(75000) - log(100)),
hdi = (ihealth * ieducation * iincome)^(1/3))
# dimension indices and hdi calculation
hdi %>%
rename(le2021 = `Life expectancy at birth (years) 2021`,
eys2021 = `Expected years of schooling (years) 2021`,
mys2021 = `Mean years of schooling (years) 2021`,
gni2021 = `Gross national income (GNI) per capita (2017 PPP$)`,
rank2020 = `HDI rank 2020`,
country = Country) %>%
mutate(country, ihealth = (le2021 - 20)/(85-20),
ieducation = ((eys2021 - 0)/(18) + (mys2021 - 0)/(15))/2,
iincome = (log(gni2021) - log(100))/(log(75000) - log(100)),
hdi = (ihealth * ieducation * iincome)^(1/3)) -> hdi1
seq(0.7, 0.799, step = 0.001)
?seq
seq(0.7, 0.799,  by = 0.001)
hdi1 %>%
if_else(hdi >= 0.8, "Very high HDI",
if_else(hdi %in% seq(0.7, 0.799,  by = 0.001), "High HDI"
if_else(hdi %in% seq(0.550, 0.699,  by = 0.001), "Medium HDI", "Low HDI")))
hdi1 %>%
if_else(hdi >= 0.8, "Very high HDI",
if_else(hdi %in% seq(0.7, 0.799,  by = 0.001), "High HDI",
if_else(hdi %in% seq(0.550, 0.699,  by = 0.001), "Medium HDI", "Low HDI")))
hdi1 %>%
if_else(hdi >= 0.8, "Very high HDI",
if_else(hdi %in% seq(0.7, 0.799,  by = 0.001), "High HDI",
if_else(hdi %in% seq(0.550, 0.699,  by = 0.001), "Medium HDI")), "Low HDI")
hdi1 %>%
if_else(hdi >= 0.8, "Very high HDI",
if_else(hdi %in% seq(0.7, 0.799,  by = 0.001), "High HDI",
if_else(hdi %in% seq(0.550, 0.699,  by = 0.001), "Medium HDI", "Low HDI")))
hdi1 %>%
transmute(group = if_else(hdi >= 0.8, "Very high HDI",
if_else(hdi %in% seq(0.7, 0.799,  by = 0.001), "High HDI",
if_else(hdi %in% seq(0.550, 0.699,  by = 0.001), "Medium HDI", "Low HDI"))))
hdi1 %>%
transmute(group = factor(if_else(hdi >= 0.8, "Very high HDI",
if_else(hdi %in% seq(0.7, 0.799,  by = 0.001), "High HDI",
if_else(hdi %in% seq(0.550, 0.699,  by = 0.001), "Medium HDI", "Low HDI")))))
hdi1
hdi1 %>%
transmute(country, hdi, group = factor(if_else(hdi >= 0.8, "Very high HDI",
if_else(hdi %in% seq(0.7, 0.799,  by = 0.001), "High HDI",
if_else(hdi %in% seq(0.550, 0.699,  by = 0.001), "Medium HDI", "Low HDI")))))
hdi1 %>%
transmute(country, hdi, group = factor(if_else(hdi >= 0.800, "Very high HDI",
if_else(hdi %in% seq(0.700, 0.799,  by = 0.001), "High HDI",
if_else(hdi %in% seq(0.550, 0.699,  by = 0.001), "Medium HDI", "Low HDI")))))
seq(0.700, 0.799,  by = 0.001)
hdi1 %>%
transmute(country, hdi, group = factor(if_else(hdi >= 0.800, "Very high HDI",
if_else(hdi %in% seq(0.700, 0.799,  by = 0.001), "High HDI",
if_else(hdi %in% seq(0.550, 0.699,  by = 0.001), "Medium HDI",
if_else(hdi < 0.550, "Low HDI", ""))))))
if_else(hdi %in% seq(0, 0.549,  by = 0.001), "Low HDI", "")))))
hdi1 %>%
transmute(country, hdi, group = factor(if_else(hdi >= 0.800, "Very high HDI",
if_else(hdi %in% seq(0.700, 0.799,  by = 0.001), "High HDI",
if_else(hdi %in% seq(0.550, 0.699,  by = 0.001), "Medium HDI",
if_else(hdi %in% seq(0, 0.549,  by = 0.001), "Low HDI", ""))))))
hdi1 %>%
transmute(country, hdi, group = factor(if_else(hdi  seq(0.800, 1,  by = 0.001), "Very high HDI",
hdi1 %>%
transmute(country, hdi, group = factor(if_else(hdi %in% seq(0.800, 1,  by = 0.001), "Very high HDI",
if_else(hdi %in% seq(0.700, 0.799,  by = 0.001), "High HDI",
if_else(hdi %in% seq(0.550, 0.699,  by = 0.001), "Medium HDI",
if_else(hdi %in% seq(0, 0.549,  by = 0.001), "Low HDI", ""))))))
hdi1 %>%
transmute(country, hdi, group = factor(if_else(hdi > 0.8, "Very high HDI",
if_else(hdi >= 0.7 | hdi <= 0.799, "High HDI",
if_else(hdi >= 0.55 | hdi <= 0.699, "Medium HDI",
if_else(hdi < 0.550, "Low HDI", ""))))))
hdi1 %>%
transmute(country, hdi, group = factor(if_else(hdi > 0.8, "Very high HDI",
if_else(hdi >= 0.7 | hdi <= 0.799, "High HDI",
if_else(hdi >= 0.55 | hdi <= 0.699, "Medium HDI",
if_else(hdi < 0.550, "Low HDI", "")))))) %>%
group_by(group) %>%
summarise(min = min(hdi),
max = max(hdi))
hdi1 %>%
transmute(country, hdi, group = factor(if_else(hdi > 0.8, "Very high HDI",
if_else(hdi >= 0.7 & hdi <= 0.799, "High HDI",
if_else(hdi >= 0.55 & hdi <= 0.699, "Medium HDI",
if_else(hdi < 0.550, "Low HDI", "")))))) %>%
group_by(group) %>%
summarise(min = min(hdi),
max = max(hdi))
hdi1 %>%
transmute(country, hdi, group = factor(if_else(hdi > 0.8, "Very high HDI",
if_else(hdi >= 0.7 & hdi <= 0.799, "High HDI",
if_else(hdi >= 0.55 & hdi <= 0.699, "Medium HDI",
if_else(hdi < 0.550, "Low HDI", "")))),
levels = c("Very high HDI", "High HDI", "Medium HDI", "Low HDI" ))) %>%
group_by(group) %>%
summarise(min = min(hdi),
max = max(hdi))
hdi1 %>%
transmute(country, hdi, group = factor(if_else(hdi > 0.8, "Very high HDI",
if_else(hdi >= 0.7 & hdi <= 0.799, "High HDI",
if_else(hdi >= 0.55 & hdi <= 0.699, "Medium HDI",
if_else(hdi < 0.550, "Low HDI", "")))),
levels = c("Very high HDI", "High HDI", "Medium HDI", "Low HDI" ))) %>%
group_by(group) %>%
summarise(min = min(hdi),
max = max(hdi),
sd = sd(hdi))
hdi1 %>%
transmute(country, hdi, group = factor(if_else(hdi > 0.8, "Very high HDI",
if_else(hdi >= 0.7 & hdi <= 0.799, "High HDI",
if_else(hdi >= 0.55 & hdi <= 0.699, "Medium HDI",
if_else(hdi < 0.550, "Low HDI", "")))),
levels = c("Very high HDI", "High HDI", "Medium HDI", "Low HDI" ))) %>%
group_by(group) %>%
summarise(min = min(hdi),
max = max(hdi),
sd = sd(hdi),
average = mean(hdi))
tibble(Classification = c("Very high HDI", "High HDI", "Medium HDI", "Low HDI"),
HDI = c("0.800 and  above", "0.700 - 0.799", "0.550 - 0.699", "Below 0.550"))
tibble(Classification = c("Very high HDI", "High HDI", "Medium HDI", "Low HDI"),
HDI = c("0.800 and  above", "0.700 - 0.799", "0.550 - 0.699", "Below 0.550")) %>%
kableExtra::kable()
tibble(Classification = c("Very high HDI", "High HDI", "Medium HDI", "Low HDI"),
HDI = c("0.800 and  above", "0.700 - 0.799", "0.550 - 0.699", "Below 0.550")) %>%
kableExtra::kable(type = "latex")
tibble(Classification = c("Very high HDI", "High HDI", "Medium HDI", "Low HDI"),
HDI = c("0.800 and  above", "0.700 - 0.799", "0.550 - 0.699", "Below 0.550")) %>%
kableExtra::kable(type = "text")
tibble(Classification = c("Very high HDI", "High HDI", "Medium HDI", "Low HDI"),
HDI = c("0.800 and  above", "0.700 - 0.799", "0.550 - 0.699", "Below 0.550")) %>%
kableExtra::kable(style = "text")
?kableExtra::kable
tibble(Classification = c("Very high HDI", "High HDI", "Medium HDI", "Low HDI"),
HDI = c("0.800 and  above", "0.700 - 0.799", "0.550 - 0.699", "Below 0.550")) %>%
kable::kable(style = "text")
tibble(Classification = c("Very high HDI", "High HDI", "Medium HDI", "Low HDI"),
HDI = c("0.800 and  above", "0.700 - 0.799", "0.550 - 0.699", "Below 0.550")) %>%
kableExtra::kable(format = "text")
?kableExtra::kable
tibble(Classification = c("Very high HDI", "High HDI", "Medium HDI", "Low HDI"),
HDI = c("0.800 and  above", "0.700 - 0.799", "0.550 - 0.699", "Below 0.550")) %>%
?kableExtra::kable(format = "latex")
kableExtra::kable(
dplyr::tibble(Dimension = c("Health", "Education", "", "Standard of Living"),
Indicator = c("Life Expectancy (years", "Expected years of schooling (years",
"Mean years of schooling (years)",
"GNI percapita (2011 PPP $)"),
Minimum = c(20, 0 ,0, 100),
Maximum = c(85, 18, 15, 75000))
)
# Chunk 1
kableExtra::kable(
dplyr::tibble(Dimension = c("Health", "Education", "", "Standard of Living"),
Indicator = c("Life Expectancy (years", "Expected years of schooling (years",
"Mean years of schooling (years)",
"GNI percapita (2011 PPP $)"),
Minimum = c(20, 0 ,0, 100),
Maximum = c(85, 18, 15, 75000))
)
# Chunk 3
library(tidyverse)
tibble(Classification = c("Very high HDI", "High HDI", "Medium HDI", "Low HDI"),
HDI = c("0.800 and  above", "0.700 - 0.799", "0.550 - 0.699", "Below 0.550")) %>%
kableExtra::kable()
# Chunk 4
hdi1 %>%
transmute(country, hdi, group = factor(if_else(hdi > 0.8, "Very high HDI",
if_else(hdi >= 0.7 & hdi <= 0.799, "High HDI",
if_else(hdi >= 0.55 & hdi <= 0.699, "Medium HDI",
if_else(hdi < 0.550, "Low HDI", "")))),
levels = c("Very high HDI", "High HDI", "Medium HDI", "Low HDI" ))) %>%
group_by(group) %>%
summarise(min = min(hdi),
max = max(hdi),
sd = sd(hdi),
average = mean(hdi))
library(readxl)
library(tidyverse)
HDI <- read_excel("HDI.xlsx")
hdi <- as_tibble(HDI)
# dimension indices and hdi calculation
hdi %>%
rename(le2021 = `Life expectancy at birth (years) 2021`,
eys2021 = `Expected years of schooling (years) 2021`,
mys2021 = `Mean years of schooling (years) 2021`,
gni2021 = `Gross national income (GNI) per capita (2017 PPP$)`,
rank2020 = `HDI rank 2020`,
country = Country) %>%
mutate(country, ihealth = (le2021 - 20)/(85-20),
ieducation = ((eys2021 - 0)/(18) + (mys2021 - 0)/(15))/2,
iincome = (log(gni2021) - log(100))/(log(75000) - log(100)),
hdi = (ihealth * ieducation * iincome)^(1/3)) -> hdi1
kableExtra::kable(
dplyr::tibble(Dimension = c("Health", "Education", "", "Standard of Living"),
Indicator = c("Life Expectancy (years", "Expected years of schooling (years",
"Mean years of schooling (years)",
"GNI percapita (2011 PPP $)"),
Minimum = c(20, 0 ,0, 100),
Maximum = c(85, 18, 15, 75000))
)
library(readxl)
library(tidyverse)
HDI <- read_excel("HDI.xlsx")
hdi <- as_tibble(HDI)
# dimension indices and hdi calculation
hdi %>%
rename(le2021 = `Life expectancy at birth (years) 2021`,
eys2021 = `Expected years of schooling (years) 2021`,
mys2021 = `Mean years of schooling (years) 2021`,
gni2021 = `Gross national income (GNI) per capita (2017 PPP$)`,
rank2020 = `HDI rank 2020`,
country = Country) %>%
mutate(country, ihealth = (le2021 - 20)/(85-20),
ieducation = ((eys2021 - 0)/(18) + (mys2021 - 0)/(15))/2,
iincome = (log(gni2021) - log(100))/(log(75000) - log(100)),
hdi = (ihealth * ieducation * iincome)^(1/3)) -> hdi1
hdi1
hdi1 %>%
transmute(country, hdi, group = factor(if_else(hdi > 0.8, "Very high HDI",
if_else(hdi >= 0.7 & hdi <= 0.799, "High HDI",
if_else(hdi >= 0.55 & hdi <= 0.699, "Medium HDI",
if_else(hdi < 0.550, "Low HDI", "")))),
levels = c("Very high HDI", "High HDI", "Medium HDI", "Low HDI" ))) %>%
group_by(group) %>%
summarise(min = min(hdi),
max = max(hdi),
sd = sd(hdi),
average = mean(hdi))
hdi1
hdi
hdi1 %>%
ggplot(aes(x = group, y = hdi ))+
geom_bar(stat = 'identity')
hdi1 %>%
transmute(country, hdi, group = factor(if_else(hdi > 0.8, "Very high HDI",
if_else(hdi >= 0.7 & hdi <= 0.799, "High HDI",
if_else(hdi >= 0.55 & hdi <= 0.699, "Medium HDI",
if_else(hdi < 0.550, "Low HDI", "")))),
levels = c("Very high HDI", "High HDI", "Medium HDI", "Low HDI" ))) -> hdi1
hdi1 %>%
group_by(group) %>%
summarise(min = min(hdi),
max = max(hdi),
sd = sd(hdi),
average = mean(hdi))
hdi1 %>%
ggplot(aes(x = group, y = hdi ))+
geom_bar(stat = 'identity')
hdi1 %>%
ggplot(aes(x = group, y = country ))+
geom_bar(stat = 'identity')
table(hdi1$)
table(hdi1$group)
View(hdi1)
